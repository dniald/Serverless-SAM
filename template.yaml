AWSTemplateFormatVersion: 2010-09-09
Description: >-
  Serverless-SAM

Transform:
- AWS::Serverless-2016-10-31

Globals:
  Function:
    Tracing: Active
  Api:
    TracingEnabled: True

Resources:
  GithubDanialRole:
    Type: AWS::Serverless::Application
    Properties:
      Location: './stacks/code-commit.yaml'

  CodePipelineArtifactStoreBucket:
    Type: AWS::Serverless::Application
    Properties:
      Location: './stacks/code-commit.yaml'
  
  CodePipelineArtifactStoreBucketPolicy:
    Type: AWS::Serverless::Application
    Properties:
      Location: './stacks/code-commit.yaml'
  
  AmazonCloudWatchEventRole:
    Type: AWS::Serverless::Application
    Properties:
      Location: './stacks/code-commit.yaml'

  AmazonCloudWatchEventRule:
    Type: AWS::Serverless::Application
    Properties:
      Location: './stacks/code-commit.yaml'

  AppPipeline:
    Type: AWS::Serverless::Application
    Properties:
      Location: './stacks/code-commit.yaml'
      Parameters:
        BranchName: !GetAtt BranchName
        RepositoryName: !GetAtt RepositoryName

  CodePipelineServiceRole:
    Type: AWS::Serverless::Application
    Properties:
      Location: './stacks/code-commit.yaml'

  GetDataFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/test
      Handler: index.handler
      Runtime: nodejs16.x
      MemorySize: 128
      Timeout: 30
      Description: A simple example includes a HTTP get method to get all items from a DynamoDB table.
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref OrdersTable
      Environment:
        Variables:
          SAMPLE_TABLE: !Ref OrdersTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /
            Method: GET

  #Commands to create a table in CloudFormation
  OrdersTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: DanialAuthorsTable_prod
      AttributeDefinitions:
        - AttributeName: "AuthorName"
          AttributeType: "S"
        - AttributeName: "BookTitle"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "AuthorName"
          KeyType: "HASH"
        - AttributeName: "BookTitle"
          KeyType: "RANGE"
      TimeToLiveSpecification:
        AttributeName: "ExpirationTime"
        Enabled: true
      BillingMode: "PAY_PER_REQUEST"
        
    DependsOn:
      - DynamoDBQueryPolicy

  DynamoDBQueryPolicy:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: DynamoDBQueryPolicy
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action: "dynamodb:Query"
            Resource: "*"
      Roles:
        - Ref: "OrdersTableQueryRole"

  OrdersTableQueryRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "dynamodb.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"

Outputs:
  WebEndpoint:
    Description: "API Gateway endpoint URL for Prod stage"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
